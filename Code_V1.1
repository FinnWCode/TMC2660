/* Pinbelegung
   Arduino        TMC-2660-EVAL     Sketch   
   Pin  Bez.      Pin Bez.          Bez.
   GND            2   GND   
   5V             5   +5V_USB   
   11   DIO       23  CLK16         CLOCKOUT   
   17   DIO       8   DIO ENN       enable   
   24   DIO       24  SPI2_CSN0     CS   
   50   DIO MISO  28  SPI2_MISO   
   51   DIO MOSI  29  SPI2_MOSI   
   52   DIO SCK   27  SPI_CLK
*/

#include <SPI.h>

const byte CLOCKOUT = 11;
const int  enable   = 17;
const int  CS       = 24;

const int STEP = 6;
const int DIR  = 7;

const int motor_steps = 200;

void setup() {    
  pinMode(CS,       OUTPUT);  
  pinMode(CLOCKOUT, OUTPUT);  
  pinMode(enable,   OUTPUT);  
  pinMode(STEP,     OUTPUT);  
  pinMode(DIR,      OUTPUT);
  
  digitalWrite(CS,    HIGH);  
  digitalWrite(enable, LOW);  
  digitalWrite(DIR,    LOW);  
  digitalWrite(STEP,   LOW);  
  
  TCCR1A = bit (COM1A0);                //toggle OC1A on Compare Match  
  TCCR1B = bit (WGM12) | bit (CS10);    //CTC, no prescaling  
  OCR1A = 0;                            //output every cycle  
  
  SPI.setBitOrder(MSBFIRST);  
  SPI.setClockDivider(SPI_CLOCK_DIV8);  
  SPI.setDataMode(SPI_MODE3);  
  SPI.begin();
  
  Serial.begin(9600);  
  while(!Serial){;}
  Serial.println("Serial laeuft!");    
  
  delay(100);  
  
  sendData(0x94557);  
  sendData(0xD001F);  
  sendData(0xE0010);  
  sendData(0x00000);
  
  digitalWrite(enable, LOW);

void loop() {  
  for (int i = 0; i < (motor_steps/2); i++){      
    digitalWrite(STEP, HIGH);      
    delayMicroseconds(500);      
    digitalWrite(STEP, LOW);      
    delayMicroseconds(500);  
  }  
  Serial.println("Rotation ausgefuehrt?");  
  delay(5000);    
}


void sendData(unsigned long data){  
   delay(100);  
   unsigned long i_data;  
   uint8_t stat;
   
   digitalWrite(CS, LOW);  
   delayMicroseconds(10);
   
   i_data |= SPI.transfer((data >> 12) & 0xff);    
   i_data <<= 8;  
   i_data |= SPI.transfer((data >> 4) & 0xff);  
   i_data <<= 8;  
   i_data |= SPI.transfer((data << 4) & 0xff);
   /*    i_data |= SPI.transfer((data >> 16) & 0xff);  
         i_data <<= 8;  
         i_data |= SPI.transfer((data >> 8) & 0xff);  
         i_data <<= 8;  
         i_data |= SPI.transfer((data     ) & 0xff);  
   */    
   
   digitalWrite(CS, HIGH);
   
   Serial.print("Received: ");  
   char tmp[24];  
   uint16_t LSB = i_data & 0xffff;  
   uint8_t MSB = i_data >> 16;  
   sprintf(tmp, "0x%.1X%.4X%", MSB, LSB);  
   Serial.println(tmp);
}

